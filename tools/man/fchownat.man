FCHOWNAT(2)                                                                                             Linux Programmer's Manual                                                                                            FCHOWNAT(2)



NAME
       fchownat - change ownership of a file relative to a directory file descriptor

SYNOPSIS
       #include <fcntl.h> /* Definition of AT_* constants */
       #include <unistd.h>

       int fchownat(int dirfd, const char *pathname,
                    uid_t owner, gid_t group, int flags);

   Feature Test Macro Requirements for glibc (see feature_test_macros(7)):

       fchownat():
           Since glibc 2.10:
               _XOPEN_SOURCE >= 700 || _POSIX_C_SOURCE >= 200809L
           Before glibc 2.10:
               _ATFILE_SOURCE

DESCRIPTION
       The fchownat() system call operates in exactly the same way as chown(2), except for the differences described in this manual page.

       If  the  pathname  given  in pathname is relative, then it is interpreted relative to the directory referred to by the file descriptor dirfd (rather than relative to the current working directory of the calling process, as is
       done by chown(2) for a relative pathname).

       If pathname is relative and dirfd is the special value AT_FDCWD, then pathname is interpreted relative to the current working directory of the calling process (like chown(2)).

       If pathname is absolute, then dirfd is ignored.

       The flags argument is a bit mask created by ORing together 0 or more of the following values;

       AT_EMPTY_PATH (since Linux 2.6.39)
              If pathname is an empty string, operate on the file referred to by dirfd (which may have been obtained using the open(2) O_PATH flag).  In this case, dirfd can refer to any type of file, not just a directory.


       AT_SYMLINK_NOFOLLOW
              If pathname is a symbolic link, do not dereference it: instead operate on the link itself, like lchown(2).  (By default, fchownat() dereferences symbolic links, like chown(2).)

RETURN VALUE
       On success, fchownat() returns 0.  On error, -1 is returned and errno is set to indicate the error.

ERRORS
       The same errors that occur for chown(2) can also occur for fchownat().  The following additional errors can occur for fchownat():

       EBADF  dirfd is not a valid file descriptor.

       EINVAL Invalid flag specified in flags.

       ENOTDIR
              pathname is relative and dirfd is a file descriptor referring to a file other than a directory.

VERSIONS
       fchownat() was added to Linux in kernel 2.6.16; library support was added to glibc in version 2.4.

CONFORMING TO
       POSIX.1-2008.  A similar system call exists on Solaris.

NOTES
       See openat(2) for an explanation of the need for fchownat().

SEE ALSO
       chown(2), openat(2), path_resolution(7), symlink(7)

COLOPHON
       This page is part of release 3.54 of the Linux man-pages project.  A description of the project, and information about reporting bugs, can be found at http://www.kernel.org/doc/man-pages/.



Linux                                                                                                          2013-07-21                                                                                                    FCHOWNAT(2)
