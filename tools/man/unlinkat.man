UNLINKAT(2)                                                                                             Linux Programmer's Manual                                                                                            UNLINKAT(2)



NAME
       unlinkat - remove a directory entry relative to a directory file descriptor

SYNOPSIS
       #include <fcntl.h> /* Definition of AT_* constants */
       #include <unistd.h>

       int unlinkat(int dirfd, const char *pathname, int flags);

   Feature Test Macro Requirements for glibc (see feature_test_macros(7)):

       unlinkat():
           Since glibc 2.10:
               _XOPEN_SOURCE >= 700 || _POSIX_C_SOURCE >= 200809L
           Before glibc 2.10:
               _ATFILE_SOURCE

DESCRIPTION
       The unlinkat() system call operates in exactly the same way as either unlink(2) or rmdir(2) (depending on whether or not flags includes the AT_REMOVEDIR flag) except for the differences described in this manual page.

       If  the  pathname  given  in pathname is relative, then it is interpreted relative to the directory referred to by the file descriptor dirfd (rather than relative to the current working directory of the calling process, as is
       done by unlink(2) and rmdir(2) for a relative pathname).

       If the pathname given in pathname is relative and dirfd is the special value AT_FDCWD, then pathname is interpreted relative to the current working directory of the calling process (like unlink(2) and rmdir(2)).

       If the pathname given in pathname is absolute, then dirfd is ignored.

       flags is a bit mask that can either be specified as 0, or by ORing together flag values that control the operation of unlinkat().  Currently only one such flag is defined:

       AT_REMOVEDIR
              By default, unlinkat() performs the equivalent of unlink(2) on pathname.  If the AT_REMOVEDIR flag is specified, then performs the equivalent of rmdir(2) on pathname.

RETURN VALUE
       On success, unlinkat() returns 0.  On error, -1 is returned and errno is set to indicate the error.

ERRORS
       The same errors that occur for unlink(2) and rmdir(2) can also occur for unlinkat().  The following additional errors can occur for unlinkat():

       EBADF  dirfd is not a valid file descriptor.

       EINVAL An invalid flag value was specified in flags.

       ENOTDIR
              pathname is relative and dirfd is a file descriptor referring to a file other than a directory.

VERSIONS
       unlinkat() was added to Linux in kernel 2.6.16; library support was added to glibc in version 2.4.

CONFORMING TO
       POSIX.1-2008.  A similar system call exists on Solaris.

NOTES
       See openat(2) for an explanation of the need for unlinkat().

SEE ALSO
       openat(2), rmdir(2), unlink(2), path_resolution(7)

COLOPHON
       This page is part of release 3.54 of the Linux man-pages project.  A description of the project, and information about reporting bugs, can be found at http://www.kernel.org/doc/man-pages/.



Linux                                                                                                          2012-05-04                                                                                                    UNLINKAT(2)
